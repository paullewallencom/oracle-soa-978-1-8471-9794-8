<?xml version = "1.0" encoding = "UTF-8" ?>
<!--
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  Oracle JDeveloper BPEL Designer 
  
  Created: Tue Jul 06 09:06:01 CEST 2010
  Author:  SOA11g
  Purpose: Asynchronous BPEL Process
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
-->
<process name="TicketReservation"
         targetNamespace="http://packtpub.com/bpel/ticketreservation/"
         xmlns="http://schemas.xmlsoap.org/ws/2003/03/business-process/"
         xmlns:client="http://packtpub.com/bpel/ticketreservation/"
         xmlns:ora="http://schemas.oracle.com/xpath/extension"
         xmlns:bpelx="http://schemas.oracle.com/bpel/extension"
         xmlns:bpws="http://schemas.xmlsoap.org/ws/2003/03/business-process/"
         xmlns:ns1="http://packtpub.com/service/airline/"
         xmlns:ns2="http://packtpub.com/bpel/ticketoffer/"
         xmlns:xp20="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.Xpath20"
         xmlns:mhdr="http://www.oracle.com/XSL/Transform/java/oracle.tip.mediator.service.common.functions.MediatorExtnFunction"
         xmlns:bpel2="http://docs.oasis-open.org/wsbpel/2.0/process/executable"
         xmlns:oraext="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.ExtFunc"
         xmlns:dvm="http://www.oracle.com/XSL/Transform/java/oracle.tip.dvm.LookupValue"
         xmlns:hwf="http://xmlns.oracle.com/bpel/workflow/xpath"
         xmlns:med="http://schemas.oracle.com/mediator/xpath"
         xmlns:ids="http://xmlns.oracle.com/bpel/services/IdentityService/xpath"
         xmlns:bpm="http://xmlns.oracle.com/bpmn20/extensions"
         xmlns:xdk="http://schemas.oracle.com/bpel/extension/xpath/function/xdk"
         xmlns:xref="http://www.oracle.com/XSL/Transform/java/oracle.tip.xref.xpath.XRefXPathFunctions"
         xmlns:bpmn="http://schemas.oracle.com/bpm/xpath"
         xmlns:socket="http://www.oracle.com/XSL/Transform/java/oracle.tip.adapter.socket.ProtocolTranslator"
         xmlns:ldap="http://schemas.oracle.com/xpath/extension/ldap">

    <!-- 
      ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        PARTNERLINKS                                                      
        List of services participating in this BPEL process               
      ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    --> 
    <partnerLinks>
        <!-- 
      The 'client' role represents the requester of this service. It is 
      used for callback. The location and correlation information associated
      with the client role are automatically set using WS-Addressing.
    -->
        <partnerLink name="TicketReservation" partnerLinkType="client:TicketReservation" myRole="TicketReservationProvider" partnerRole="TicketReservationRequester"/>
        <partnerLink myRole="UnitedairlineCustomer" name="UnitedAirlines"
                     partnerRole="UnitedairlineService"
                     partnerLinkType="ns1:UnitedflightLT"/>
        <partnerLink myRole="airlineCustomer" name="AmericanAirlines"
                     partnerRole="airlineService"
                     partnerLinkType="ns1:flightLT"/>
    </partnerLinks>

    <!-- 
      ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        VARIABLES                                                        
        List of messages and XML documents used within this BPEL process 
      ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    -->
    <variables>
        <!-- Reference to the message passed as input during initiation -->
        <variable name="inputVariable" messageType="client:TicketReservationRequestMessage"/>

        <!-- Reference to the message that will be sent back to the requester during callback -->
        <variable name="outputVariable" messageType="client:TicketReservationResponseMessage"/>
        <variable name="FlightData" messageType="ns1:TravelResponseMessage"/>
        <variable name="ReservationResponse"
                  messageType="ns1:ReservationResponseMessage"/>
    </variables>

    <!-- 
      ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
       ORCHESTRATION LOGIC                                               
       Set of activities coordinating the flow of messages across the    
       services integrated within this business process                  
      ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    -->
    <sequence name="main">
        <!-- Receive input from requestor. (Note: This maps to operation defined in TicketReservation.wsdl) -->
        <receive name="receiveInput" partnerLink="TicketReservation" portType="client:TicketReservation" operation="process" variable="inputVariable" createInstance="yes"/>

        <!-- 
          Asynchronous callback to the requester. (Note: the callback location and correlation id is transparently handled using WS-addressing.)
        -->
        <assign name="TransformTicketData">
            <bpelx:annotation>
                <bpelx:pattern>transformation</bpelx:pattern>
            </bpelx:annotation>
            <copy>
                <from expression="ora:processXSLT('xsl/Transformation_2.xsl',bpws:getVariableData('inputVariable','payload'))"/>
                <to variable="FlightData" part="confirmationData"/>
            </copy>
        </assign>
        <scope name="Scope_1">
            <bpelx:annotation>
                <bpelx:general>
                    <bpelx:property name="userLabel">MakeReservation</bpelx:property>
                </bpelx:general>
            </bpelx:annotation>
            <switch name="Switch_1">
                <case condition="bpws:getVariableData('inputVariable','payload','/ns2:FlightTicketResponse/ns2:airline') = 'American'">
                    <bpelx:annotation>
                        <bpelx:general>
                            <bpelx:property name="userLabel">American Airlines
                                                             is selected</bpelx:property>
                        </bpelx:general>
                    </bpelx:annotation>
                    <sequence>
                        <invoke name="MakeReservationAmerican"
                                partnerLink="AmericanAirlines"
                                portType="ns1:FlightAvailabilityPT"
                                operation="MakeReservation"
                                inputVariable="FlightData"/>
                        <receive name="MakeReservationAmericanCallback"
                                 createInstance="no"
                                 partnerLink="AmericanAirlines"
                                 portType="ns1:FlightCallbackPT"
                                 operation="MakeReservationCallback"
                                 variable="ReservationResponse"/>
                    </sequence>
                </case>
                <otherwise>
                    <sequence>
                        <invoke name="MakeReservationUnited"
                                inputVariable="FlightData"
                                partnerLink="UnitedAirlines"
                                portType="ns1:UnitedFlightAvailabilityPT"
                                operation="MakeReservation"/>
                        <receive name="MakeReservationUnitedCallback"
                                 createInstance="no"
                                 variable="ReservationResponse"
                                 partnerLink="UnitedAirlines"
                                 portType="ns1:UnitedFlightCallbackPT"
                                 operation="MakeReservationCallback"/>
                    </sequence>
                </otherwise>
            </switch>
        </scope>
        <assign name="setOutput">
            <copy>
                <from variable="ReservationResponse" part="reservationData"
                      query="/ns1:reservationData"/>
                <to variable="outputVariable" part="payload"
                    query="/ns1:reservationData"/>
            </copy>
        </assign>
        <invoke name="callbackClient" partnerLink="TicketReservation" portType="client:TicketReservationCallback" operation="processResponse" inputVariable="outputVariable"/>
    </sequence>
</process>